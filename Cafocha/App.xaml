<Application x:Class="Cafocha.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:local="clr-namespace:Cafocha"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="GUI/LoginWindow.xaml">            
    <!-- StartupUri="GUI/LoginWindow.xaml"> -->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" /> -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />

                <!-- primary color -->
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>

                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                            include three hues from the primary palette (and the associated forecolours).
                            Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush"
                                     Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush"
                                     Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush"
                                     Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush"
                                     Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush"
                                     Color="{StaticResource Primary700}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush"
                                     Color="{StaticResource Primary700Foreground}" />
                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush"
                                     Color="{StaticResource Accent200}" />
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush"
                                     Color="{StaticResource Accent200Foreground}" />
                </ResourceDictionary>

                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml" />

                <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                    xmlns:circularProgressBar="clr-namespace:MaterialDesignThemes.Wpf.Converters.CircularProgressBar"
                                    xmlns:transitions="clr-namespace:MaterialDesignThemes.Wpf.Transitions"
                                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">

                    <converters:NotZeroConverter x:Key="NotZeroConverter" />
                    <converters:MyConverter x:Key="MyConverter" />
                    <converters:PercentConverter x:Key="PercentCenverter" />
                    <converters:NonPercentConverter x:Key="NonPercentConverter" />
                    <converters:IngredientMaxProgressBarConverter x:Key="IngredientMaxProgressBarConverter" />

                    <Style x:Key="MyMaterialDesignLinearProgressBar"
                           TargetType="{x:Type ProgressBar}">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryHueDarkBrush}" />
                        <Setter Property="Background"
                                Value="{DynamicResource PrimaryHueLightBrush}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource PrimaryHueLightBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                        <Setter Property="Height"
                                Value="4" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ProgressBar}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="OnLoaded">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                           Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                           Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="OnLoadedNoAnimation">
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="TemplateRoot"
                                                             To="1"
                                                             Duration="0" />
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             Storyboard.TargetName="TemplateRoot"
                                                             To="1"
                                                             Duration="0" />
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             Storyboard.TargetName="TemplateRoot"
                                                             To="1"
                                                             Duration="0" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="TemplateRoot"
                                          RenderTransformOrigin="0,0.5"
                                          Opacity="0">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0"
                                                                ScaleY="0" />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Determinate" />
                                                <VisualState x:Name="Indeterminate">
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                                       Storyboard.TargetName="Animation">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                                  Value="0.25" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                                  Value="0.25" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                                  Value="0.25" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                                                                      Storyboard.TargetName="Animation">
                                                            <EasingPointKeyFrame KeyTime="0"
                                                                                 Value="-0.5,0.5" />
                                                            <EasingPointKeyFrame KeyTime="0:0:1"
                                                                                 Value="0.5,0.5" />
                                                            <EasingPointKeyFrame KeyTime="0:0:2"
                                                                                 Value="1.5,0.5" />
                                                        </PointAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}" />
                                        <Rectangle x:Name="PART_Track" />
                                        <Grid x:Name="PART_Indicator"
                                              ClipToBounds="true"
                                              HorizontalAlignment="Left">
                                            <Rectangle x:Name="Indicator"
                                                       Fill="{TemplateBinding Foreground}" />
                                            <Rectangle x:Name="Animation"
                                                       RenderTransformOrigin="0.5,0.5">
                                                <Rectangle.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </Rectangle.RenderTransform>
                                                <Rectangle.Fill>
                                                    <MultiBinding Converter="{StaticResource IngredientMaxProgressBarConverter}">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                 Path="Value" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                 Path="Maximum" />
                                                    </MultiBinding>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="materialDesign:TransitionAssist.DisableTransitions"
                                                 Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource OnLoadedNoAnimation}"
                                                                 Name="BeginStoryboardOnLoadedNoAnimation" />
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoadedNoAnimation" />
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsVisible"
                                                           Value="True" />
                                                <Condition Property="materialDesign:TransitionAssist.DisableTransitions"
                                                           Value="False" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource OnLoaded}"
                                                                 Name="BeginStoryboardOnLoaded" />
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoaded" />
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                        <Trigger Property="Orientation"
                                                 Value="Vertical">
                                            <Setter Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsIndeterminate"
                                                 Value="true">
                                            <Setter Property="Visibility"
                                                    TargetName="Indicator"
                                                    Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <circularProgressBar:StartPointConverter x:Key="StartPointConverter" />
                    <circularProgressBar:ArcSizeConverter x:Key="ArcSizeConverter" />
                    <circularProgressBar:ArcEndPointConverter x:Key="ArcEndPointConverter" />
                    <circularProgressBar:LargeArcConverter x:Key="LargeArcConverter" />
                    <circularProgressBar:RotateTransformConverter x:Key="RotateTransformConverter" />
                    <circularProgressBar:RotateTransformCentreConverter x:Key="RotateTransformCentreConverter" />


                    <Style x:Key="MyMaterialDesignCircularProgressBar"
                           TargetType="{x:Type ProgressBar}">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="Width"
                                Value="20" />
                        <Setter Property="Height"
                                Value="20" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ProgressBar}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="IsIndeterminateStoryboard"
                                                    TargetName="RotateTransform"
                                                    TargetProperty="Angle"
                                                    RepeatBehavior="Forever">
                                            <DoubleAnimation From="0"
                                                             To="359"
                                                             Duration="0:0:2" />
                                        </Storyboard>
                                        <Storyboard x:Key="IsFullyIndeterminateScaleStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           RepeatBehavior="Forever">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                      Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:4"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                             Storyboard.TargetProperty="Angle"
                                                             RepeatBehavior="Forever"
                                                             From="00"
                                                             To="359"
                                                             Duration="0:0:1.25" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="TemplateRoot"
                                          ClipToBounds="False">
                                        <Grid x:Name="FullyIndeterminateGrid">
                                            <Grid.RenderTransform>
                                                <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform"
                                                                ScaleX="0" />
                                            </Grid.RenderTransform>
                                        </Grid>
                                        <Grid x:Name="PathGrid"
                                              Margin="2" />
                                        <Canvas>
                                            <Ellipse Fill="{TemplateBinding Background}"
                                                     Width="{TemplateBinding Width}"
                                                     Height="{TemplateBinding Height}" />
                                            <Path x:Name="Path"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="10"
                                                  Canvas.Top="2"
                                                  Canvas.Left="2"
                                                  RenderTransformOrigin="0, 0">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}"
                                                                        SweepDirection="Clockwise">
                                                                <ArcSegment.IsLargeArc>
                                                                    <MultiBinding Converter="{StaticResource LargeArcConverter}">
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Value" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Minimum" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Maximum" />
                                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform"
                                                                                 Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.IsLargeArc>
                                                                <ArcSegment.Point>
                                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                                        <Binding ElementName="PathGrid"
                                                                                 Path="ActualWidth" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Value" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Minimum" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Maximum" />
                                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform"
                                                                                 Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Point>
                                                            </ArcSegment>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform x:Name="RotateTransform"
                                                                         CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}"
                                                                         CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}">
                                                            <RotateTransform.Angle>
                                                                <MultiBinding Converter="{StaticResource RotateTransformConverter}">
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Value" />
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Minimum" />
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Maximum" />
                                                                </MultiBinding>
                                                            </RotateTransform.Angle>
                                                        </RotateTransform>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>

                                        </Canvas>

                                        <Viewbox HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Width="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource MyConverter}}"
                                                 Height="{Binding ElementName=PathGrid, Path=ActualHeight, Converter={StaticResource MyConverter}}">
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}
                                                                     ,Path=Value, Converter={StaticResource PercentCenverter}}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontSize="12">

                                            </TextBlock>
                                        </Viewbox>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}"
                                                           Value="True" />
                                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}"
                                                           Value="True" />
                                                <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}"
                                                           Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminateStoryboard}"
                                                                 Name="IsIndeterminateStoryboard" />
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsIndeterminate"
                                                           Value="True" />
                                                <Condition Property="Value"
                                                           Value="0" />
                                                <Condition Property="IsVisible"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                                <BeginStoryboard Storyboard="{StaticResource IsFullyIndeterminateScaleStoryboard}"
                                                                 Name="IsFullyIndeterminateStoryboard" />
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="MyNonPercentMaterialDesignCircularProgressBar"
                           TargetType="{x:Type ProgressBar}">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="Width"
                                Value="20" />
                        <Setter Property="Height"
                                Value="20" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ProgressBar}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="IsIndeterminateStoryboard"
                                                    TargetName="RotateTransform"
                                                    TargetProperty="Angle"
                                                    RepeatBehavior="Forever">
                                            <DoubleAnimation From="0"
                                                             To="359"
                                                             Duration="0:0:2" />
                                        </Storyboard>
                                        <Storyboard x:Key="IsFullyIndeterminateScaleStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           RepeatBehavior="Forever">
                                                <SplineDoubleKeyFrame KeyTime="0"
                                                                      Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:4"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                             Storyboard.TargetProperty="Angle"
                                                             RepeatBehavior="Forever"
                                                             From="00"
                                                             To="359"
                                                             Duration="0:0:1.25" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="TemplateRoot"
                                          ClipToBounds="False">
                                        <Grid x:Name="FullyIndeterminateGrid">
                                            <Grid.RenderTransform>
                                                <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform"
                                                                ScaleX="0" />
                                            </Grid.RenderTransform>
                                        </Grid>
                                        <Grid x:Name="PathGrid"
                                              Margin="2" />
                                        <Canvas>
                                            <Ellipse Fill="{TemplateBinding Background}"
                                                     Width="{TemplateBinding Width}"
                                                     Height="{TemplateBinding Height}" />
                                            <Path x:Name="Path"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="10"
                                                  Canvas.Top="2"
                                                  Canvas.Left="2"
                                                  RenderTransformOrigin="0, 0">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}"
                                                                        SweepDirection="Clockwise">
                                                                <ArcSegment.IsLargeArc>
                                                                    <MultiBinding Converter="{StaticResource LargeArcConverter}">
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Value" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Minimum" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Maximum" />
                                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform"
                                                                                 Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.IsLargeArc>
                                                                <ArcSegment.Point>
                                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                                        <Binding ElementName="PathGrid"
                                                                                 Path="ActualWidth" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Value" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Minimum" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                                 Path="Maximum" />
                                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform"
                                                                                 Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Point>
                                                            </ArcSegment>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform x:Name="RotateTransform"
                                                                         CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}"
                                                                         CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}">
                                                            <RotateTransform.Angle>
                                                                <MultiBinding Converter="{StaticResource RotateTransformConverter}">
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Value" />
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Minimum" />
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                                             Path="Maximum" />
                                                                </MultiBinding>
                                                            </RotateTransform.Angle>
                                                        </RotateTransform>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>

                                        </Canvas>
                                        <Viewbox HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Width="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource MyConverter}}"
                                                 Height="{Binding ElementName=PathGrid, Path=ActualHeight, Converter={StaticResource MyConverter}}">

                                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}
                                                                      ,Path=Value, Converter={StaticResource NonPercentConverter}}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontSize="12">

                                            </TextBlock>

                                        </Viewbox>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}"
                                                           Value="True" />
                                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}"
                                                           Value="True" />
                                                <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}"
                                                           Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminateStoryboard}"
                                                                 Name="IsIndeterminateStoryboard" />
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsIndeterminate"
                                                           Value="True" />
                                                <Condition Property="Value"
                                                           Value="0" />
                                                <Condition Property="IsVisible"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                                <BeginStoryboard Storyboard="{StaticResource IsFullyIndeterminateScaleStoryboard}"
                                                                 Name="IsFullyIndeterminateStoryboard" />
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}"
                   BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />


        </ResourceDictionary>
    </Application.Resources>
</Application>
